#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdint.h>
// #include <string.h>
// #include <errno.h>
//#include <fcntl.h>
//#include <sys/ioctl.h>
//#include <linux/spi/spidev.h>

#include <wiringPi.h>
#include <wiringPiSPI.h>

int main(void)
{
    int chan=1;
    int speed=1000000;

    // SpeedStepStick uses mode 3
    if( wiringPiSPISetupMode (chan, speed, 3)==-1)
    {
        printf("Could not initialise SPI\n");
        return -1;
    }

    unsigned char buf[5];

    // Read GSTAT to clear values
    // buf[0] =  0x01; // REG_GSTAT
    // int ret=wiringPiSPIDataRW (chan,buf, 5) ;
    // buf[0] =  0x00; // REG_GSTAT
    // buf[1] =  0x00; // REG_GSTAT
    // buf[2] =  0x00; // REG_GSTAT
    // buf[3] =  0x00; // REG_GSTAT
    // buf[4] =  0x10; // REG_GSTAT
    // ret=wiringPiSPIDataRW (chan,buf, 5) ;

    while(1)
    {
        // Initialize SPI buffer
        // buf[0] =  0x6F; // REG_DRVSTATUS
        // buf[1] =  0x00;
        // buf[2] =  0x00;
        // buf[3] =  0x00;
        // buf[4] =  0x00;

        // Send the command and ignore the result
        // ret=wiringPiSPIDataRW (chan,buf, 5) ;

        // Send the command again to daisy chain the data out
        // buf[0] =  0x71; // REG_DRVSTATUS
        // ret=wiringPiSPIDataRW (chan,buf, 5) ;

        // Now examine the result
        // printf ("%.2x %.2x %.2x %.2x\n", buf[0], buf[1], buf[2], buf[3]);

        getchar();
        buf[0] =  0x01;
        buf[1] =  0x00;
        buf[2] =  0x00;
        buf[3] =  0x00;
        buf[4] =  0x00;
        wiringPiSPIDataRW (chan,buf, 5) ;
        printf ("(0x6F) %.2x %.2x %.2x %.2x %.2x\n", buf[0], buf[1], buf[2], buf[3], buf[4]);

        buf[0] =  0x04;
        buf[1] =  0x00;
        buf[2] =  0x00;
        buf[3] =  0x00;
        buf[4] =  0x00;
        wiringPiSPIDataRW (chan,buf, 5) ;
        printf ("(0x01) %.2x %.2x %.2x %.2x %.2x\n", buf[0], buf[1], buf[2], buf[3], buf[4]);

        buf[0] =  0x6F; // REG_DRVSTATUS
        buf[1] =  0x00;
        buf[2] =  0x00;
        buf[3] =  0x00;
        buf[4] =  0x00;
        wiringPiSPIDataRW (chan,buf, 5) ;
        printf ("(0x04) %.2x %.2x %.2x %.2x %.2x\n", buf[0], buf[1], buf[2], buf[3], buf[4]);

        // usleep(10000000);
    }


}
